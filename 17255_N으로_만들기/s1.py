"""
521
1 → 21 → 521
2 → 21 → 521
2 → 52 → 521
5 → 52 → 521
4

9111
1 → 11 → 111 → 9111
1 → 11 → 911 → 9111
1 → 91 → 911 → 9111
9 → 91 → 911 → 9111
4
"""

"""
두 가지 행동을 반복

1. 수의 왼쪽에 숫자를 하나 적는다.
2. 수의 오른쪽에 숫자를 하나 적는다.

준하는 어떤 수 N을 만드는 방법의 수가 몇 가지인가? 
숫자를 적는 과정에서 나온 수가 순서대로 모두 같다면 같은 방법이다.

단, 숫자를 적는 과정에서 수는 0으로 시작할 수 있다.
"""
# 문자열 쌓거나 줄이는건 dfs


def dfs(string):
    global answer
    # 길이가 1이면 한가지밖에 없다
    if len(n) == 1:
        answer += 1
        return
    n_set = set(list(string))
    # 한개의 수로 중복되면 한가지 밖에 없다
    if len(n_set) == 1:
        answer += 1
        return
    # 그런 경우가 아니면 좌우로 나눠서 깊이 탐색을 해주면 된다
    else:
        dfs(string[1:])
        dfs(string[:-1])


# 문자열로 받아줘야 된다
n = input()

answer = 0
dfs(n)
print(answer)
